{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","records","setRecords","selectedRecord","setSelectedRecord","useEffect","a","fetch","response","text","split","pop","fileName","length","state","items","slice","map","item","id","name","stars","onChange","event","currentTarget","value","record","key","index","render","document","getElementById"],"mappings":"2LAwFeA,G,MArFC,WAAO,IAAD,EACUC,mBAAmB,IAD7B,mBACbC,EADa,KACJC,EADI,OAEwBF,mBAA0J,MAFlL,mBAEbG,EAFa,KAEGC,EAFH,KAIpBC,qBAAU,WACH,cAAAC,EAAA,sCAAAA,EAAA,sEACoBC,MAAM,kBAD1B,cACGC,EADH,gBAEgBA,EAASC,OAFzB,OAEGA,EAFH,QAGGR,EAAUQ,EAAKC,MAAM,OAGnBC,MAERT,EAAWD,GACXG,EAAkB,CAAEQ,SAAUX,EAAQA,EAAQY,OAAS,GAAIC,MAAO,YAT/D,gDAWJ,IAEHT,qBAAU,WACe,OAAnBF,GAIyB,YAAzBA,EAAeW,OAId,cAAAR,EAAA,sCAAAA,EAAA,sEACoBC,MAAM,QAAUJ,EAAeS,UADnD,cACGJ,EADH,gBAEgBA,EAASC,OAFzB,OAEGA,EAFH,OAGGM,EAAQN,EACXC,MAAM,MAENM,MAAM,GAAI,GACVC,KAAI,SAAAC,GAAS,IAAD,EACeA,EAAKR,MAAM,KAD1B,mBAEX,MAAO,CAAES,GAFE,KAEEC,KAFF,KAEQC,MAFR,SAKfjB,EAAkB,CAAEQ,SAAUT,EAAeS,SAAUE,MAAO,UAAWC,UAZtE,+CAcJ,CAACZ,IAMJ,OACE,6BACE,4BAAQmB,SAN4D,SAAAC,GACtEnB,EAAkB,CAAEQ,SAAUW,EAAMC,cAAcC,MAAOX,MAAO,cAM3Db,EAAQgB,KAAI,SAAAS,GAAM,OAAI,4BAAQC,IAAKD,GAASA,OAE/C,6BACCvB,EAC6B,YAAzBA,EAAeW,MACd,uBAEA,+BACE,iCAAUX,EAAeS,UACzB,+BACE,4BACE,iCACA,kCACA,oCACA,uCAGJ,+BACGT,EAAeY,MAAME,KAAI,SAACC,EAAMU,GAAP,OACxB,wBAAID,IAAKT,EAAKC,IACZ,4BAAKS,EAAQ,GACb,4BAAKV,EAAKC,IACV,4BAAKD,EAAKE,MACV,4BAAKF,EAAKG,aAOpB,4BC9EVQ,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.502dd94d.chunk.js","sourcesContent":["import './App.css';\nimport React, { FC, useEffect, useState, ChangeEventHandler } from 'react';\n\nconst App: FC = () => {\n  const [records, setRecords] = useState<string[]>([]);\n  const [selectedRecord, setSelectedRecord] = useState<{ fileName: string; state: 'loading'; } | { fileName: string; state: 'success'; items: { id: string; name: string; stars: string; }[]; } | null>(null);\n\n  useEffect(() => {\n    void async function () {\n      const response = await fetch('data/index.log');\n      const text = await response.text();\n      const records = text.split('\\n');\n\n      // Remove newline\n      records.pop();\n\n      setRecords(records);\n      setSelectedRecord({ fileName: records[records.length - 1], state: 'loading' });\n    }()\n  }, []);\n\n  useEffect(() => {\n    if (selectedRecord === null) {\n      return;\n    }\n\n    if (selectedRecord.state === 'success') {\n      return;\n    }\n\n    void async function () {\n      const response = await fetch('data/' + selectedRecord.fileName);\n      const text = await response.text();\n      const items = text\n        .split('\\n')\n        // Remove headers & newline\n        .slice(1, -1)\n        .map(item => {\n          const [id, name, stars] = item.split(';');\n          return { id, name, stars }\n        });\n\n      setSelectedRecord({ fileName: selectedRecord.fileName, state: 'success', items });\n    }()\n  }, [selectedRecord]);\n\n  const handleRecordSelectChange: ChangeEventHandler<HTMLSelectElement> = event => {\n    setSelectedRecord({ fileName: event.currentTarget.value, state: 'loading' })\n  };\n\n  return (\n    <div>\n      <select onChange={handleRecordSelectChange}>\n        {records.map(record => <option key={record}>{record}</option>)}\n      </select>\n      <br />\n      {selectedRecord\n        ? (selectedRecord.state === 'loading'\n          ? 'Loading recordâ€¦'\n          : (\n            <table>\n              <caption>{selectedRecord.fileName}</caption>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Stars</th>\n                </tr>\n              </thead>\n              <tbody>\n                {selectedRecord.items.map((item, index) => (\n                  <tr key={item.id}>\n                    <td>{index + 1}</td>\n                    <td>{item.id}</td>\n                    <td>{item.name}</td>\n                    <td>{item.stars}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )\n        )\n        : 'No record is selected.'}\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}