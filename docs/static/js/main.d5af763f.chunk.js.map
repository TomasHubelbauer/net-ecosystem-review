{"version":3,"sources":["App.tsx","index.tsx"],"names":["suffixLength","length","App","useState","records","setRecords","selectedRecordIndex","setSelectedRecordIndex","filter","setFilter","useEffect","a","fetch","response","text","split","slice","map","fileName","state","loadRecord","recordIndex","record","index","items","item","includes","id","name","stars","link","Number","_record","error","setForceUpdateNonce","handleToggleButtonClick","event","currentTarget","dataset","undefined","Error","localStorage","getItem","removeItem","setItem","Date","now","renderRelatedRecord","flipSign","findIndex","i","comparedItem","change","difference","Math","abs","sign","onClick","onChange","value","key","placeholder","href","selectedRecord","message","prevRecord","nextRecord","toUpperCase","className","data-id","data-name","String","currentItem","renderGap","renderSelectedRecord","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5af763f.chunk.js","sourcesContent":["import './App.css';\nimport React, { FC, useEffect, useState, ChangeEventHandler, MouseEventHandler } from 'react';\n\ntype Item = {\n  id: string;\n  name: string;\n  link: string;\n  stars: number;\n};\n\ntype Record =\n  | { state: 'ready'; fileName: string; }\n  | { state: 'loading'; fileName: string; }\n  | { state: 'success'; fileName: string; items: Item[]; }\n  | { state: 'error'; fileName: string; error: Error; }\n  ;\n\nconst suffixLength = '.###Z.csv'.length;\nconst App: FC = () => {\n  const [records, setRecords] = useState<Record[]>([]);\n  const [selectedRecordIndex, setSelectedRecordIndex] = useState<number | null>(null);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    void async function () {\n      const response = await fetch('data/index.log');\n      const text = await response.text();\n      const records: Record[] = text\n        .split('\\n')\n        // Remove newline\n        .slice(0, -1)\n        .map(fileName => ({\n          state: 'ready',\n          fileName,\n        }));\n\n      setRecords(records);\n      if (records.length > 0) {\n        setSelectedRecordIndex(records.length - 1);\n      }\n    }()\n  }, []);\n\n  useEffect(() => {\n    async function loadRecord(recordIndex: number) {\n      const record = records[recordIndex];\n\n      // Prevent loading an error which is already loading, loaded or failed\n      if (record.state !== 'ready') {\n        return;\n      }\n\n      // Mark the record as loading\n      setRecords(records.map((record, index) => index === recordIndex ? ({ state: 'loading', fileName: record.fileName }) : record));\n\n      let _record: Record;\n      try {\n        const response = await fetch('data/' + record.fileName);\n        const text = await response.text();\n        const items: Item[] = text\n          .split('\\n')\n          // Remove headers & newline\n          .slice(1, -1)\n          .map(item => {\n            const [id, name, stars, link] = item.includes(';') ? item.split(';') : item.split(',');\n            return { id, name, stars: Number(stars), link }\n          });\n        _record = {\n          state: 'success',\n          fileName: record.fileName,\n          items,\n        };\n      } catch (error) {\n        _record = {\n          state: 'error',\n          fileName: record.fileName,\n          error\n        }\n      }\n\n      // Mark the record as either loaded or errored\n      setRecords(records.map((record, index) => (index === recordIndex) ? _record : record));\n    }\n\n    if (selectedRecordIndex === null) {\n      return;\n    }\n\n    // Load the selected record\n    loadRecord(selectedRecordIndex);\n\n    // Load the prev record for comparison\n    if (selectedRecordIndex > 0) {\n      loadRecord(selectedRecordIndex - 1);\n    }\n\n    // Load the next record for comparison\n    if (selectedRecordIndex < records.length - 1) {\n      loadRecord(selectedRecordIndex + 1);\n    }\n  }, [selectedRecordIndex, records]);\n\n  const handleRecordSelectChange: ChangeEventHandler<HTMLSelectElement> = event => {\n    setSelectedRecordIndex(Number(event.currentTarget.value));\n  };\n\n  const [forceUpdateNonce, setForceUpdateNonce] = useState();\n  const handleToggleButtonClick: MouseEventHandler<HTMLButtonElement> = event => {\n    const { id, name } = event.currentTarget.dataset;\n    if (id === undefined || name === undefined) {\n      throw new Error('ID and name must be passed!');\n    }\n\n    if (localStorage.getItem(id)) {\n      localStorage.removeItem(id);\n    } else {\n      localStorage.setItem(id, name);\n    }\n\n    void forceUpdateNonce;\n    setForceUpdateNonce(Date.now);\n  };\n\n  const handleFilterInputChange: ChangeEventHandler<HTMLInputElement> = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const handlePrevButtonClick: MouseEventHandler = event => {\n    if (selectedRecordIndex === null) {\n      return;\n    }\n\n    setSelectedRecordIndex(selectedRecordIndex > 0 ? selectedRecordIndex - 1 : records.length - 1);\n  };\n\n  const handleNextButtonClick: MouseEventHandler = event => {\n    if (selectedRecordIndex === null) {\n      return;\n    }\n\n    setSelectedRecordIndex(selectedRecordIndex < records.length - 1 ? selectedRecordIndex + 1 : 0);\n  };\n\n  function renderRelatedRecord(record: Record, item: Item, flipSign: boolean) {\n    if (record.state === 'ready' || record.state === 'loading') {\n      return 'Loading…';\n    }\n\n    if (record.state === 'error') {\n      return 'Error!';\n    }\n\n    const index = record.items.findIndex(i => i.id === item.id);\n    const comparedItem = record.items[index];\n    if (!comparedItem) {\n      return 'No match';\n    }\n\n    const change = item.stars - comparedItem.stars;\n    const difference = Math.abs(change);\n    const sign = Math.sign(change) > 0;\n    return (\n      <>\n        <code>{(sign || flipSign) ? '+' : '-'}</code>\n        {difference} ({comparedItem.stars})\n      </>\n    );\n  }\n\n  function renderSelectedRecord() {\n    if (selectedRecordIndex === null) {\n      return 'No record is selected';\n    }\n\n    const selectedRecord = records[selectedRecordIndex];\n    if (selectedRecord.state === 'ready') {\n      return 'Selected ' + selectedRecord.fileName;\n    }\n\n    if (selectedRecord.state === 'loading') {\n      return 'Loading ' + selectedRecord.fileName + '…';\n    }\n\n    if (selectedRecord.state === 'error') {\n      return selectedRecord.error.message;\n    }\n\n    const prevRecord = selectedRecordIndex > 0 ? records[selectedRecordIndex - 1] : null;\n    const nextRecord = selectedRecordIndex < records.length - 1 ? records[selectedRecordIndex + 1] : null;\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>#</th>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Stars</th>\n            <th>Gap</th>\n            {prevRecord && <th>{prevRecord.fileName.slice(0, -suffixLength)}</th>}\n            {nextRecord && <th>{nextRecord.fileName.slice(0, -suffixLength)}</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {selectedRecord.items.map((item, index) => item.name.toUpperCase().includes(filter.toUpperCase()) && (\n            <tr key={item.id} className={localStorage.getItem(item.id) ? '★' : '☆'}>\n              <td>\n                <button data-id={item.id} data-name={item.name} onClick={handleToggleButtonClick}>\n                  {localStorage.getItem(item.id) ? '★' : '☆'}\n                </button>\n              </td>\n              <td id={String(index + 1)}>\n                <a href={'#' + String(index + 1)}>#{index + 1}</a>\n              </td>\n              <td>{item.id}</td>\n              <td id={item.name}>\n                <a href={'#' + item.name}>#</a>\n                {' '}\n                {item.link ? <a href={item.link}>{item.name}</a> : item.name}\n              </td>\n              <td>{item.stars}</td>\n              <td>{renderGap(selectedRecord.items, index)}</td>\n              {prevRecord && <td>{renderRelatedRecord(prevRecord, item, true)}</td>}\n              {nextRecord && <td>{renderRelatedRecord(nextRecord, item, false)}</td>}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  function renderGap(items: Item[], index: number) {\n    if (index === 0) {\n      return null;\n    }\n\n    const currentItem = items[index];\n    let comparedItem: Item | undefined;\n    do {\n      index--;\n      comparedItem = items[index];\n    } while (index > 0 && (comparedItem === undefined || comparedItem.stars === currentItem.stars));\n\n    return comparedItem.stars - currentItem.stars;\n  }\n\n  return (\n    <div>\n      <button onClick={handlePrevButtonClick}>←</button>\n      <select onChange={handleRecordSelectChange} value={selectedRecordIndex || undefined}>\n        {records.map((record, index) => <option key={record.fileName} value={index}>{record.fileName.slice(0, -suffixLength)}</option>)}\n      </select>\n      <button onClick={handleNextButtonClick}>→</button>\n      <input placeholder=\"🔍\" value={filter} onChange={handleFilterInputChange} />\n      Copyright &copy; <a href=\"https://hubelbauer.net\">Tomas Hubelbauer</a> 2019.\n      {' '}\n      <a href=\"https://github.com/TomasHubelbauer/net-ecosystem-review\">GitHub</a>\n      <hr />\n      {renderSelectedRecord()}\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}